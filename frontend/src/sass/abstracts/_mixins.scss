@mixin respondTo($breakpoint) {
  @if map-has-key($map: $breakpoints, $key: $breakpoint) {
    @media (max-width: map-get($map: $breakpoints, $key: $breakpoint)) {
      @content;
    }
  }
}

@mixin changeScrollbar($width: 0.72rem, $scroll-color: rgba(30, 30, 30, 0.4)) {
  &::-webkit-scrollbar {
    width: $width;
    height: 0.8rem;

    background-color: rgba(0, 0, 0, 0.2);
  }

  &::-webkit-scrollbar-thumb {
    background-color: $scroll-color;
    border-radius: 2rem;

    &:hover {
      background-color: rgba(20, 20, 20, 0.6);
    }
  }
}

@mixin removeNumberArrow() {
  /* number input-iin arrow-iig alga bolgoj bn */
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    appearance: none;
    margin: 0;
  }
}

@mixin clickEffect() {
  cursor: pointer;

  &:hover {
    opacity: 0.6;
  }

  &:active {
    transform: scale(0.88);
    transition: transform 0.2s ease-out;
  }
}

@mixin formedContent() {
  width: 30rem;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  background-color: white;
  box-shadow: 0 0 4px 2px rgba($color: gray, $alpha: 0.1);
  border-radius: 1rem;
  overflow: hidden;

  padding: 2rem;

  @include respondTo(xs) {
    width: 100%;
  }

  &__button {
    margin-top: 1rem;
  }
}
